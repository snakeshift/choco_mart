{"remainingRequest":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/babel-loader/lib/index.js!/Users/yokoyamakenta/Desktop/choco_mart/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/yokoyamakenta/Desktop/choco_mart/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yokoyamakenta/Desktop/choco_mart/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yokoyamakenta/Desktop/choco_mart/src/components/sell.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yokoyamakenta/Desktop/choco_mart/src/components/sell.vue","mtime":1601103304653},{"path":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/cache-loader/dist/cjs.js","mtime":1599521191920},{"path":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/babel-loader/lib/index.js","mtime":1599521191611},{"path":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/vuetify-loader/lib/loader.js","mtime":1599521195655},{"path":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/cache-loader/dist/cjs.js","mtime":1599521191920},{"path":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/vue-loader/lib/index.js","mtime":1599521195584}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["sell.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"table-choco sell\">\n    <table class=\"item-table-choco back-choco pa-1\" cellspacing=\"5\">\n      <thead>\n        <tr class=\"item-th-choco text-choco body-2\">\n          <th>ステータス</th>\n          <th>装備名</th>\n          <th>価格</th>\n          <th>返</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(item,index) in items\" :key=\"index\" class=\"item-td-choco text-choco\">\n          <td class=\"item-choco\">\n            <div class=\"item-type-choco\">\n              <v-btn\n                dark\n                color=\"primary\"\n                @click=\"setStatus(index,item)\"\n                class=\"button-choco\"\n                :class=\"{'danger': item.status === STATUS.UNDER_RECRUITING}\"\n              >\n                <span>{{STATUS_TEXT[TYPE.SELL][item.status]}}</span>\n              </v-btn>\n            </div>\n          </td>\n          <td>\n            <div class=\"item-input-choco\">\n              <template v-if=\"item.status === STATUS.NOT_RECRUITING\">\n                <input type=\"text\" class=\"text-choco-dark\" v-model=\"item.name\">\n              </template>\n              <template v-else>\n                <span class=\"text-choco-dark text-truncate\">\n                  {{item.name}}\n                </span>\n              </template>\n            </div>\n          </td>\n          <td>\n            <div class=\"item-input-choco\">\n              <template v-if=\"item.status === STATUS.NOT_RECRUITING\">\n                <input type=\"text\" class=\"text-choco-dark\" v-model=\"item.price\" maxlength=\"10\">\n              </template>\n              <template v-else>\n                <span class=\"text-choco-dark pointer\" maxlength=\"10\" @click=\"changePrice(item,index)\">\n                  {{trimText(item.price,5)}}\n                </span>\n              </template>\n            </div>\n          </td>\n          <td>\n            <div class=\"item-input-choco\">\n              <template v-if=\"item.status === STATUS.NOT_RECRUITING\">\n                <span class=\"text-choco-dark\">-</span>\n              </template>\n              <template v-else>\n                <span class=\"text-choco-dark link pointer\" @click=\"$emit('showReply', item.id,'lists')\">{{item.reply}}</span>\n              </template>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <v-row justify=\"center\">\n      <v-dialog\n        v-model=\"dialog.isShow\"\n        max-width=\"500\"\n        width=\"90%\"\n      >\n        <div class=\"modal-choco\">\n          <div class=\"head text-choco pl-2 body-2\">\n            {{dialog.title}}\n          </div>\n          <div class=\"body text-choco-dark pa-2\">\n            <p v-html=\"dialog.content\"></p>\n          </div>\n          <div class=\"footer\">\n            <v-btn v-if=\"dialog.button.positive.isShow\" color=\"primary\" class=\"button-choco\" :class=\"{'pointer-none': dialog.button.positive.isClicked}\" dark @click=\"dialog.button.positive.func()\">\n              <span>OK</span>\n            </v-btn>\n            <v-btn v-if=\"dialog.button.negative.isShow\" color=\"primary\" class=\"button-choco\" dark @click=\"dialog.button.negative.func()\">\n              <span>キャンセル</span>\n            </v-btn>\n          </div>\n        </div>\n      </v-dialog>\n    </v-row>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapGetters, mapMutations, mapActions } from 'vuex'\nimport firebase from 'firebase'\nimport firebaseConfig from '@/plugins/firebase'\nimport { TYPE, TYPE_TEXT, STATUS, STATUS_TEXT } from '@/config/library'\nimport { USER_REF, SELL_REF, BUY_REF, NOTICE_REF, LIST_REF, COMMENT_REF } from '@/config/firebase/ref'\nimport { CURRENT_TIME, INCREMENT, DELETE, ARRAY_UNION } from '@/config/firebase/util'\n\nexport default {\n  data () {\n    return {\n      dialog: {\n        isShow: false,\n        title: \"\",\n        content: \"\",\n        button: {\n          positive: {\n            isShow: false,\n            isClicked: false,\n            func(){\n\n            }\n          },\n          negative: {\n            isShow: false,\n            func(){\n\n            }\n          }\n        },\n      },\n      count: 0\n    }\n  },\n  methods: {\n    setStatus(index,item){\n      switch(item.status){\n        case(1): {\n          this.dialog.title = \"notice\"\n          if(this.is_empty(item.name) || this.is_empty(item.price)){\n            this.dialog.content = `\n            <p>出品する装備名、価格を正しく入力してください。</p>\n            `\n            // <div class=\"text-center\">\n            //   <img src=\"${require('@/assets/imgs/berude.png')}\" height=\"100px\">\n            // </div>\n            this.dialog.button.positive.isShow = false\n            this.dialog.button.negative.isShow = true\n            this.dialog.button.negative.func = () => {\n              this.dialog.isShow = false\n            }\n          }else{\n            this.dialog.content = `【${item.name}】を${item.price}<br>で出品します。よろしいですか?`\n            this.dialog.button.positive.isShow = true\n            this.dialog.button.negative.isShow = true\n\n            let itemId = this.db.collection(\"lists\").doc().id\n\n            let now = firebase.firestore.FieldValue.serverTimestamp()\n            let today = Math.floor( new Date().getTime() / 1000 )\n\n            let sellRef = this.db.collection(\"sells\").doc(this.user.uid)\n            let listRef = this.db.collection(\"lists\").doc(itemId)\n            let msgRef = this.db.collection(\"comments\").doc(itemId)\n\n            this.dialog.button.positive.func = async () => {\n              this.dialog.button.positive.isClicked = true\n\n              // 商品データ\n              let itemData = {\n                id: itemId,\n                uid: this.user.uid,\n                status: 2,\n                name: item.name,\n                price: item.price,\n                type: 2,\n                reply: 1,\n                updated_at: now,\n                created_at: now\n              }\n              // コメント構造\n              let msgData = {\n                item: listRef,\n                reply: [\n                  {\n                    uid: this.user.uid,\n                    msg: \"取引を開始しました。\",\n                    created_at: today\n                  }\n                ],\n                good: 0,\n                created_at: now,\n                updated_at: now\n              }\n\n              this.items[index] = {\n                id: itemId,\n                status: 2,\n                name: item.name,\n                price: item.price,\n                reply: 1,\n              }\n\n              // 販売リスト更新(個人)\n              await sellRef.update({\n                ['items.' + index]: listRef\n              })\n              // 販売リスト更新(全体)\n              await listRef.set({ ...itemData })\n              // スレッド作成\n              await msgRef.set({ ...msgData })\n              // リスナー登録\n              this.setListListener(itemId)\n              this.dialog.isShow = false\n\n              this.dialog.button.positive.isClicked = false\n            }\n            this.dialog.button.negative.func = () => {\n              this.dialog.isShow = false\n            }\n          }\n          this.dialog.isShow = true\n          break\n        }\n\n        case(2): {\n          this.dialog.title = \"notice\"\n          this.dialog.content = `【${item.name}】の取引を締め切ります。<br>よろしいですか?`\n          this.dialog.button.positive.isShow = true\n          this.dialog.button.negative.isShow = true\n\n          let now = firebase.firestore.FieldValue.serverTimestamp()\n          let today = Math.floor( new Date().getTime() / 1000 )\n\n          let sellRef = this.db.collection(\"sells\").doc(this.user.uid)\n          let listRef = this.db.collection(\"lists\").doc(item.id)\n          let msgRef = this.db.collection(\"comments\").doc(item.id)\n\n          this.dialog.button.positive.func = async () => {\n            this.dialog.button.positive.isClicked = true\n\n            // 商品データ\n            let itemData = {\n              reply: firebase.firestore.FieldValue.increment(1),\n              status: 3,\n              updated_at: now\n            }\n            // コメント構造\n            let msgData = {\n              uid: this.user.uid,\n              msg: \"取引を締め切りました。\",\n              created_at: Math.floor( new Date().getTime() / 1000 )\n            }\n            // 販売リスト更新(個人)\n            await sellRef.update({\n              ['items.' + index]: firebase.firestore.FieldValue.delete()\n            })\n            // 販売リスト更新(全体)\n            await listRef.update({\n              ...itemData \n            })\n            // チャット更新\n            await msgRef.update({\n              reply: firebase.firestore.FieldValue.arrayUnion(msgData)\n            });\n            // 出品枠を空に\n            this.$set(this.items, index, {\n              id: \"\",\n              status: 1,\n              name: \"\",\n              price: \"\",\n              reply: 0\n            })\n\n            this.dialog.isShow = false\n            this.dialog.button.positive.isClicked = false\n          }\n          this.dialog.button.negative.func = () => {\n            this.dialog.isShow = false\n          }\n\n          this.dialog.isShow = true\n          break\n        }\n\n        default:\n          break\n      }\n    },\n    changePrice(item,index){\n      this.dialog.title = \"notice\"\n      this.dialog.content = `\n        <p>変更後の価格を入力してください。</p>\n        <div class=\"item-input-choco\">\n          <input type=\"text\" id=\"newPrice\" class=\"text-choco-dark\" value=${item.price} maxlength=\"10\">\n        </div>\n      `\n      this.dialog.button.positive.isShow = true\n      this.dialog.button.negative.isShow = true\n      this.dialog.button.positive.func = async () => {\n        let newPrice = document.getElementById('newPrice').value\n        if(newPrice != item.price){\n          this.dialog.button.positive.isClicked = true\n          await this.setPrice(item,index,newPrice)\n          this.dialog.isShow = false\n          this.dialog.button.positive.isClicked = false\n        }else{\n          return\n        }\n      }\n      this.dialog.button.negative.func = () => {\n        this.dialog.isShow = false\n      }\n      this.dialog.isShow = true\n    },\n    async setPrice(item,index,newPrice){\n      let listRef = this.db.collection(\"lists\").doc(item.id)\n      let msgRef = this.db.collection(\"comments\").doc(item.id)\n\n      let now = firebase.firestore.FieldValue.serverTimestamp()\n      let itemData = {\n        price: newPrice,\n        updated_at: now,\n        reply: firebase.firestore.FieldValue.increment(1)\n      }\n\n      let msgData = {\n        uid: this.user.uid,\n        msg: `価格の変更を行いました。<br>${item.price} → 【${newPrice}】`,\n        created_at: Math.floor( new Date().getTime() / 1000 )\n      }\n      // 販売リスト更新(全体)\n      await listRef.update({\n         ...itemData \n      })\n      // 値段変更通知\n      await msgRef.update({\n        reply: firebase.firestore.FieldValue.arrayUnion(msgData)\n      });\n      this.dialog.isShow = false\n    },\n    async refresh(){\n      // await firebaseConfig.onAuth()\n      let data = await this.RefreshSellList()\n      // 初期化\n      for(let i=1; i<=data.count; i++){\n        this.$set(this.items, i, {\n          id: \"\",\n          status: 1,\n          name: \"\",\n          price: \"\",\n          reply: 0\n        })\n      }\n      // 更新\n      if(data.items){\n        for(let index in data.items){\n          let itemRef = await firebase.firestore().collection(\"lists\").doc(data.items[index].id)\n          let itemData = await itemRef.get()\n          this.items[index] = {\n            id: itemData.data().id,\n            status: itemData.data().status,\n            name: itemData.data().name,\n            price: itemData.data().price,\n            reply: itemData.data().reply,\n          }\n          this.setListListener(itemData.data().id)\n        }\n      }\n    },\n    setListListener(id){\n      let t = this\n      firebase.firestore().collection(\"lists\").doc(id).onSnapshot(function (querySnapshot) {\n        let updatedData = querySnapshot.data()\n        for(let index in t.items) {\n          if(t.items[index].id == updatedData.id){\n            t.items[index] = {\n              id: updatedData.id,\n              status: updatedData.status,\n              name: updatedData.name,\n              price: updatedData.price,\n              reply: updatedData.reply,\n            }\n          }\n        }\n      })\n    }\n  },\n  computed: {\n    ...mapGetters({\n      user: 'auth/user',\n    }),\n  },\n  async mounted(){\n    await this.refresh()\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped></style>"],"sourceRoot":"src/components"}]}