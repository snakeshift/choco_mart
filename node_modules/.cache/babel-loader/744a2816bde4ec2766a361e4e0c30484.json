{"remainingRequest":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/babel-loader/lib/index.js!/Users/yokoyamakenta/Desktop/choco_mart/node_modules/eslint-loader/index.js??ref--13-0!/Users/yokoyamakenta/Desktop/choco_mart/src/mixins/api.js","dependencies":[{"path":"/Users/yokoyamakenta/Desktop/choco_mart/src/mixins/api.js","mtime":1599521196382},{"path":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/cache-loader/dist/cjs.js","mtime":1599521191920},{"path":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/babel-loader/lib/index.js","mtime":1599521191611},{"path":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/eslint-loader/index.js","mtime":1599521192603}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/yokoyamakenta/Desktop/choco_mart/src/mixins/api.js"],"names":["firebase","store","mapState","mapGetters","mapMutations","mapActions","methods","GetUser","auth","currentUser","user","GetUserById","userId","userRef","firestore","collection","doc","get","then","data","GetUsersName","usersRef","usersName","docs","userData","push","name","SetUserName","user_name","uid","names","indexOf","updateProfile","displayName","update","RefreshUser","signInAnonymously","commit","RefreshSellList","sellRef","User","RefreshBuyList","buyRef","RefreshCommentList","itemId","commentRef","computed"],"mappings":"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","sourcesContent":["import firebase from 'firebase'\nimport store from \"@/store\"\nimport { mapState, mapGetters, mapMutations, mapActions } from 'vuex'\n\nexport default{\n  methods:{\n    async GetUser () {\n      let user = await firebase.auth().currentUser;\n      return user\n    },\n    async GetUserById (userId) {\n      let userRef = firebase.firestore().collection(\"users\").doc(userId)\n      let data\n      await userRef.get().then(function(doc) {\n        data = doc.data()\n      })\n      return data\n    },\n    async GetUsersName() {\n      let usersRef = firebase.firestore().collection(\"users\")\n      let usersName = []\n      await usersRef.get().then(function(doc){\n        for(let user of doc.docs){\n          let userData = user.data()\n          usersName.push(userData.name)\n        }\n      })\n      return usersName\n    },\n    async SetUserName (user_name) {\n      let user = await firebase.auth().currentUser;\n      let userRef = firebase.firestore().collection(\"users\").doc(user.uid)\n\n      const names = await this.GetUsersName()\n      if (names.indexOf(user_name) >= 0){\n        // 存在する\n        return false\n      }else{\n        if(user) {\n          user.updateProfile({\n            displayName: user_name\n          })\n          userRef.update({\n            name: user_name\n          })\n        }\n        return true\n      }\n    },\n    async RefreshUser () {\n      let userData = await firebase.auth().signInAnonymously()\n      store.commit('auth/onAuthStateChanged', userData.user);\n      store.commit('auth/onUserStatusChanged', userData.user.uid ? true : false);\n    },\n    async RefreshSellList () {\n      let sellRef = firebase.firestore().collection(\"sells\").doc(this.User.uid)\n      let data\n      await sellRef.get().then(function(doc) {\n        data = doc.data()\n      })\n      return data\n    },\n    async RefreshBuyList () {\n      let buyRef = firebase.firestore().collection(\"buys\").doc(this.User.uid)\n      let data\n      await buyRef.get().then(function(doc) {\n        data = doc.data()\n      })\n      return data\n    },\n    async RefreshCommentList (itemId) {\n      let commentRef = firebase.firestore().collection(\"comments\").doc(itemId)\n      let data\n      await commentRef.get().then(function(doc) {\n        data = doc.data()\n      })\n      return data\n    }\n  },\n  computed: {\n    ...mapGetters({\n      User: 'auth/user',\n    }),\n  },\n}"]}]}