{"remainingRequest":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/babel-loader/lib/index.js!/Users/yokoyamakenta/Desktop/choco_mart/node_modules/eslint-loader/index.js??ref--13-0!/Users/yokoyamakenta/Desktop/choco_mart/src/store/modules/auth.js","dependencies":[{"path":"/Users/yokoyamakenta/Desktop/choco_mart/src/store/modules/auth.js","mtime":1602028506250},{"path":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/cache-loader/dist/cjs.js","mtime":1599521191920},{"path":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/babel-loader/lib/index.js","mtime":1599521191611},{"path":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/eslint-loader/index.js","mtime":1599521192603}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMveW9rb3lhbWFrZW50YS9EZXNrdG9wL2Nob2NvX21hcnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgZmlyZWJhc2UgZnJvbSAnZmlyZWJhc2UnOwppbXBvcnQgeyBVU0VSX1JFRiwgU0VMTF9SRUYsIEJVWV9SRUYsIE5PVElDRV9SRUYgfSBmcm9tICdAL2NvbmZpZy9maXJlYmFzZS9yZWYnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogewogICAgdXNlcjoge30sCiAgICB1c2VySW5mbzoge30sCiAgICBzdGF0dXM6IGZhbHNlCiAgfSwKICBnZXR0ZXJzOiB7CiAgICB1c2VyOiBmdW5jdGlvbiB1c2VyKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS51c2VyOwogICAgfSwKICAgIHVzZXJJbmZvOiBmdW5jdGlvbiB1c2VySW5mbyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUudXNlckluZm87CiAgICB9LAogICAgaXNTaWduZWRJbjogZnVuY3Rpb24gaXNTaWduZWRJbihzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuc3RhdHVzOwogICAgfQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBvbkF1dGhTdGF0ZUNoYW5nZWQ6IGZ1bmN0aW9uIG9uQXV0aFN0YXRlQ2hhbmdlZChzdGF0ZSwgdXNlcikgewogICAgICBzdGF0ZS51c2VyID0gdXNlcjsgLy9maXJlYmFzZeOBjOi/lOOBl+OBn+ODpuODvOOCtuODvOaDheWgsQogICAgfSwKICAgIHNldFVzZXJJbmZvOiBmdW5jdGlvbiBzZXRVc2VySW5mbyhzdGF0ZSwgdXNlckluZm8pIHsKICAgICAgc3RhdGUudXNlckluZm8gPSB1c2VySW5mbzsKICAgIH0sCiAgICBvblVzZXJTdGF0dXNDaGFuZ2VkOiBmdW5jdGlvbiBvblVzZXJTdGF0dXNDaGFuZ2VkKHN0YXRlLCBzdGF0dXMpIHsKICAgICAgc3RhdGUuc3RhdHVzID0gc3RhdHVzOyAvL+ODreOCsOOCpOODs+OBl+OBpuOCi+OBi+OBqeOBhuOBiyB0cnVlIG9yIGZhbHNlCiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBnZXRVc2VyQW5vbnltb3VzbHk6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9nZXRVc2VyQW5vbnltb3VzbHkgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAgICAgLyojX19QVVJFX18qLwogICAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKF9yZWYsIHBheWxvYWQpIHsKICAgICAgICB2YXIgZGlzcGF0Y2gsIGNvbW1pdCwgZ2V0dGVycywgcm9vdEdldHRlcnMsIHVzZXJEYXRhLCBpc0V4aXN0VXNlckluZm87CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZGlzcGF0Y2ggPSBfcmVmLmRpc3BhdGNoLCBjb21taXQgPSBfcmVmLmNvbW1pdCwgZ2V0dGVycyA9IF9yZWYuZ2V0dGVycywgcm9vdEdldHRlcnMgPSBfcmVmLnJvb3RHZXR0ZXJzOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gZmlyZWJhc2UuYXV0aCgpLnNpZ25JbkFub255bW91c2x5KCk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIHVzZXJEYXRhID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIGlzRXhpc3RVc2VySW5mbyA9IHVzZXJEYXRhLnVzZXIudWlkID8gdHJ1ZSA6IGZhbHNlOwogICAgICAgICAgICAgICAgY29tbWl0KCdvbkF1dGhTdGF0ZUNoYW5nZWQnLCB1c2VyRGF0YS51c2VyKTsKICAgICAgICAgICAgICAgIGNvbW1pdCgnb25Vc2VyU3RhdHVzQ2hhbmdlZCcsIGlzRXhpc3RVc2VySW5mbyk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBnZXRVc2VyQW5vbnltb3VzbHkoX3gsIF94MikgewogICAgICAgIHJldHVybiBfZ2V0VXNlckFub255bW91c2x5LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBnZXRVc2VyQW5vbnltb3VzbHk7CiAgICB9KCksCiAgICBnZXRDdXJyZW50VXNlcjogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2dldEN1cnJlbnRVc2VyID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAgIC8qI19fUFVSRV9fKi8KICAgICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoX3JlZjIsIHBheWxvYWQpIHsKICAgICAgICB2YXIgZGlzcGF0Y2gsIGNvbW1pdCwgZ2V0dGVycywgcm9vdEdldHRlcnMsIHVzZXJEYXRhLCBpc0V4aXN0VXNlckluZm87CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGRpc3BhdGNoID0gX3JlZjIuZGlzcGF0Y2gsIGNvbW1pdCA9IF9yZWYyLmNvbW1pdCwgZ2V0dGVycyA9IF9yZWYyLmdldHRlcnMsIHJvb3RHZXR0ZXJzID0gX3JlZjIucm9vdEdldHRlcnM7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gZmlyZWJhc2UuYXV0aCgpLmN1cnJlbnRVc2VyOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICB1c2VyRGF0YSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgaXNFeGlzdFVzZXJJbmZvID0gdXNlckRhdGEudXNlci51aWQgPyB0cnVlIDogZmFsc2U7CiAgICAgICAgICAgICAgICBjb21taXQoJ29uQXV0aFN0YXRlQ2hhbmdlZCcsIHVzZXJEYXRhLnVzZXIpOwogICAgICAgICAgICAgICAgY29tbWl0KCdvblVzZXJTdGF0dXNDaGFuZ2VkJywgaXNFeGlzdFVzZXJJbmZvKTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gZ2V0Q3VycmVudFVzZXIoX3gzLCBfeDQpIHsKICAgICAgICByZXR1cm4gX2dldEN1cnJlbnRVc2VyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBnZXRDdXJyZW50VXNlcjsKICAgIH0oKSwKICAgIGdldFVzZXJCeUlkOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfZ2V0VXNlckJ5SWQgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAgICAgLyojX19QVVJFX18qLwogICAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMyhfcmVmMywgcGF5bG9hZCkgewogICAgICAgIHZhciBkaXNwYXRjaCwgY29tbWl0LCBnZXR0ZXJzLCByb290R2V0dGVycywgdXNlclJlZiwgZGF0YTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZGlzcGF0Y2ggPSBfcmVmMy5kaXNwYXRjaCwgY29tbWl0ID0gX3JlZjMuY29tbWl0LCBnZXR0ZXJzID0gX3JlZjMuZ2V0dGVycywgcm9vdEdldHRlcnMgPSBfcmVmMy5yb290R2V0dGVyczsKICAgICAgICAgICAgICAgIHVzZXJSZWYgPSBVU0VSX1JFRigpLmRvYyhwYXlsb2FkLnVzZXJJZCk7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gdXNlclJlZi5nZXQoKS50aGVuKGZ1bmN0aW9uIChkb2MpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGRvYy5kYXRhKCk7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIGRhdGEpOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBnZXRVc2VyQnlJZChfeDUsIF94NikgewogICAgICAgIHJldHVybiBfZ2V0VXNlckJ5SWQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGdldFVzZXJCeUlkOwogICAgfSgpLAogICAgZ2V0VXNlcnNOYW1lOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfZ2V0VXNlcnNOYW1lID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAgIC8qI19fUFVSRV9fKi8KICAgICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoX3JlZjQsIHBheWxvYWQpIHsKICAgICAgICB2YXIgZGlzcGF0Y2gsIGNvbW1pdCwgZ2V0dGVycywgcm9vdEdldHRlcnMsIHVzZXJzTmFtZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZGlzcGF0Y2ggPSBfcmVmNC5kaXNwYXRjaCwgY29tbWl0ID0gX3JlZjQuY29tbWl0LCBnZXR0ZXJzID0gX3JlZjQuZ2V0dGVycywgcm9vdEdldHRlcnMgPSBfcmVmNC5yb290R2V0dGVyczsKICAgICAgICAgICAgICAgIHVzZXJzTmFtZSA9IFtdOwogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIFVTRVJfUkVGKCkuZ2V0KCkudGhlbihmdW5jdGlvbiAoZG9jKSB7CiAgICAgICAgICAgICAgICAgIHZhciBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgdmFyIF9kaWRJdGVyYXRvckVycm9yID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgIHZhciBfaXRlcmF0b3JFcnJvciA9IHVuZGVmaW5lZDsKCiAgICAgICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgX2l0ZXJhdG9yID0gZG9jLmRvY3NbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gKF9zdGVwID0gX2l0ZXJhdG9yLm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlKSB7CiAgICAgICAgICAgICAgICAgICAgICB2YXIgdXNlciA9IF9zdGVwLnZhbHVlOwogICAgICAgICAgICAgICAgICAgICAgdmFyIHVzZXJEYXRhID0gdXNlci5kYXRhKCk7CiAgICAgICAgICAgICAgICAgICAgICB1c2Vyc05hbWUucHVzaCh1c2VyRGF0YS5uYW1lKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgICAgICAgICAgIF9kaWRJdGVyYXRvckVycm9yID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICBfaXRlcmF0b3JFcnJvciA9IGVycjsKICAgICAgICAgICAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uICYmIF9pdGVyYXRvci5yZXR1cm4gIT0gbnVsbCkgewogICAgICAgICAgICAgICAgICAgICAgICBfaXRlcmF0b3IucmV0dXJuKCk7CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgICAgICAgICAgICAgIGlmIChfZGlkSXRlcmF0b3JFcnJvcikgewogICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjsKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LmFicnVwdCgicmV0dXJuIiwgdXNlcnNOYW1lKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0KTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gZ2V0VXNlcnNOYW1lKF94NywgX3g4KSB7CiAgICAgICAgcmV0dXJuIF9nZXRVc2Vyc05hbWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGdldFVzZXJzTmFtZTsKICAgIH0oKSwKICAgIHVwZGF0ZVVzZXJOYW1lOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfdXBkYXRlVXNlck5hbWUgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAgICAgLyojX19QVVJFX18qLwogICAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNShfcmVmNSwgcGF5bG9hZCkgewogICAgICAgIHZhciBkaXNwYXRjaCwgY29tbWl0LCBnZXR0ZXJzLCByb290R2V0dGVycywgdXNlciwgdXNlclJlZiwgbmFtZXM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU1JChfY29udGV4dDUpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ1LnByZXYgPSBfY29udGV4dDUubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGRpc3BhdGNoID0gX3JlZjUuZGlzcGF0Y2gsIGNvbW1pdCA9IF9yZWY1LmNvbW1pdCwgZ2V0dGVycyA9IF9yZWY1LmdldHRlcnMsIHJvb3RHZXR0ZXJzID0gX3JlZjUucm9vdEdldHRlcnM7CiAgICAgICAgICAgICAgICB1c2VyID0gZ2V0dGVycy51c2VyOwogICAgICAgICAgICAgICAgdXNlclJlZiA9IFVTRVJfUkVGKCkuZG9jKHVzZXIudWlkKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBkaXNwYXRjaCgnZ2V0VXNlcnNOYW1lJyk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIG5hbWVzID0gX2NvbnRleHQ1LnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKCFuYW1lcy5pbmNsdWRlcyhwYXlsb2FkLnVzZXJOYW1lKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LmFicnVwdCgicmV0dXJuIiwgZmFsc2UpOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgICAgaWYgKHVzZXIpIHsKICAgICAgICAgICAgICAgICAgdXNlci51cGRhdGVQcm9maWxlKHsKICAgICAgICAgICAgICAgICAgICBkaXNwbGF5TmFtZTogcGF5bG9hZC51c2VyTmFtZQogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgdXNlclJlZi51cGRhdGUoewogICAgICAgICAgICAgICAgICAgIG5hbWU6IHBheWxvYWQudXNlck5hbWUKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5hYnJ1cHQoInJldHVybiIsIHRydWUpOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU1KTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gdXBkYXRlVXNlck5hbWUoX3g5LCBfeDEwKSB7CiAgICAgICAgcmV0dXJuIF91cGRhdGVVc2VyTmFtZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gdXBkYXRlVXNlck5hbWU7CiAgICB9KCksCiAgICByZWdpc3RlckJhbjogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX3JlZ2lzdGVyQmFuID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAgIC8qI19fUFVSRV9fKi8KICAgICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTYoX3JlZjYsIHBheWxvYWQpIHsKICAgICAgICB2YXIgZGlzcGF0Y2gsIGNvbW1pdCwgZ2V0dGVycywgcm9vdEdldHRlcnMsIHVzZXJJZCwgdXNlclJlZjsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTYkKF9jb250ZXh0NikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDYucHJldiA9IF9jb250ZXh0Ni5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZGlzcGF0Y2ggPSBfcmVmNi5kaXNwYXRjaCwgY29tbWl0ID0gX3JlZjYuY29tbWl0LCBnZXR0ZXJzID0gX3JlZjYuZ2V0dGVycywgcm9vdEdldHRlcnMgPSBfcmVmNi5yb290R2V0dGVyczsKICAgICAgICAgICAgICAgIHVzZXJJZCA9IHBheWxvYWQudXNlcklkOwogICAgICAgICAgICAgICAgdXNlclJlZiA9IFVTRVJfUkVGKCkuZG9jKHVzZXJJZCk7CiAgICAgICAgICAgICAgICB1c2VyUmVmLnVwZGF0ZSh7CiAgICAgICAgICAgICAgICAgIGlzQmFuOiB0cnVlCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ2LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU2KTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gcmVnaXN0ZXJCYW4oX3gxMSwgX3gxMikgewogICAgICAgIHJldHVybiBfcmVnaXN0ZXJCYW4uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHJlZ2lzdGVyQmFuOwogICAgfSgpLAogICAgcmVsZWFzZUJhbjogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX3JlbGVhc2VCYW4gPSBfYXN5bmNUb0dlbmVyYXRvcigKICAgICAgLyojX19QVVJFX18qLwogICAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNyhfcmVmNywgcGF5bG9hZCkgewogICAgICAgIHZhciBkaXNwYXRjaCwgY29tbWl0LCBnZXR0ZXJzLCByb290R2V0dGVycywgdXNlcklkLCB1c2VyUmVmOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNyQoX2NvbnRleHQ3KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Ny5wcmV2ID0gX2NvbnRleHQ3Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBkaXNwYXRjaCA9IF9yZWY3LmRpc3BhdGNoLCBjb21taXQgPSBfcmVmNy5jb21taXQsIGdldHRlcnMgPSBfcmVmNy5nZXR0ZXJzLCByb290R2V0dGVycyA9IF9yZWY3LnJvb3RHZXR0ZXJzOwogICAgICAgICAgICAgICAgdXNlcklkID0gcGF5bG9hZC51c2VySWQ7CiAgICAgICAgICAgICAgICB1c2VyUmVmID0gVVNFUl9SRUYoKS5kb2ModXNlcklkKTsKICAgICAgICAgICAgICAgIHVzZXJSZWYudXBkYXRlKHsKICAgICAgICAgICAgICAgICAgaXNCYW46IGZhbHNlCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ3LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU3KTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gcmVsZWFzZUJhbihfeDEzLCBfeDE0KSB7CiAgICAgICAgcmV0dXJuIF9yZWxlYXNlQmFuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiByZWxlYXNlQmFuOwogICAgfSgpLAogICAgUmVmcmVzaFVzZXI6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9SZWZyZXNoVXNlciA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgICAvKiNfX1BVUkVfXyovCiAgICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU4KF9yZWY4LCBwYXlsb2FkKSB7CiAgICAgICAgdmFyIGRpc3BhdGNoLCBjb21taXQsIGdldHRlcnMsIHJvb3RHZXR0ZXJzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlOCQoX2NvbnRleHQ4KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0OC5wcmV2ID0gX2NvbnRleHQ4Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBkaXNwYXRjaCA9IF9yZWY4LmRpc3BhdGNoLCBjb21taXQgPSBfcmVmOC5jb21taXQsIGdldHRlcnMgPSBfcmVmOC5nZXR0ZXJzLCByb290R2V0dGVycyA9IF9yZWY4LnJvb3RHZXR0ZXJzOwogICAgICAgICAgICAgICAgZGlzcGF0Y2goJ2dldFVzZXJBbm9ueW1vdXNseScpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDguc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTgpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBSZWZyZXNoVXNlcihfeDE1LCBfeDE2KSB7CiAgICAgICAgcmV0dXJuIF9SZWZyZXNoVXNlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gUmVmcmVzaFVzZXI7CiAgICB9KCksCiAgICB1cGRhdGVJY29uOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfdXBkYXRlSWNvbiA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgICAvKiNfX1BVUkVfXyovCiAgICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU5KF9yZWY5LCBwYXlsb2FkKSB7CiAgICAgICAgdmFyIGRpc3BhdGNoLCBjb21taXQsIGdldHRlcnMsIHJvb3RHZXR0ZXJzLCB1c2VyUmVmOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlOSQoX2NvbnRleHQ5KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0OS5wcmV2ID0gX2NvbnRleHQ5Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBkaXNwYXRjaCA9IF9yZWY5LmRpc3BhdGNoLCBjb21taXQgPSBfcmVmOS5jb21taXQsIGdldHRlcnMgPSBfcmVmOS5nZXR0ZXJzLCByb290R2V0dGVycyA9IF9yZWY5LnJvb3RHZXR0ZXJzOwogICAgICAgICAgICAgICAgdXNlclJlZiA9IFVTRVJfUkVGKCkuZG9jKGdldHRlcnMudXNlci51aWQpOwogICAgICAgICAgICAgICAgX2NvbnRleHQ5Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIHVzZXJSZWYudXBkYXRlKHsKICAgICAgICAgICAgICAgICAgaWNvbjogcGF5bG9hZC5pY29uCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgdXNlclJlZi5nZXQoKS50aGVuKGZ1bmN0aW9uIChkb2MpIHsKICAgICAgICAgICAgICAgICAgY29tbWl0KCdzZXRVc2VySW5mbycsIGRvYy5kYXRhKCkpOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0OS5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlOSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIHVwZGF0ZUljb24oX3gxNywgX3gxOCkgewogICAgICAgIHJldHVybiBfdXBkYXRlSWNvbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gdXBkYXRlSWNvbjsKICAgIH0oKQogIH0KfTs="},{"version":3,"sources":["/Users/yokoyamakenta/Desktop/choco_mart/src/store/modules/auth.js"],"names":["firebase","USER_REF","SELL_REF","BUY_REF","NOTICE_REF","namespaced","state","user","userInfo","status","getters","isSignedIn","mutations","onAuthStateChanged","setUserInfo","onUserStatusChanged","actions","getUserAnonymously","payload","dispatch","commit","rootGetters","auth","signInAnonymously","userData","isExistUserInfo","uid","getCurrentUser","currentUser","getUserById","userRef","doc","userId","get","then","data","getUsersName","usersName","docs","push","name","updateUserName","names","includes","userName","updateProfile","displayName","update","registerBan","isBan","releaseBan","RefreshUser","updateIcon","icon"],"mappings":"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","sourcesContent":["import firebase from 'firebase'\nimport { USER_REF, SELL_REF, BUY_REF, NOTICE_REF } from '@/config/firebase/ref'\n\nexport default {\n  namespaced: true,\n  state: {\n    user: {},\n    userInfo: {},\n    status: false\n  },\n  getters: {\n    user(state) {\n      return state.user\n    },\n    userInfo(state) {\n      return state.userInfo\n    },\n    isSignedIn(state) {\n      return state.status\n    }\n  },\n  mutations: {\n    onAuthStateChanged(state, user) {\n      state.user = user //firebaseが返したユーザー情報\n    },\n    setUserInfo(state, userInfo) {\n      state.userInfo = userInfo\n    },\n    onUserStatusChanged(state, status) {\n      state.status = status //ログインしてるかどうか true or false\n    }\n  },\n  actions: {\n    async getUserAnonymously({ dispatch, commit, getters, rootGetters }, payload) {\n      const userData = await firebase.auth().signInAnonymously()\n      const isExistUserInfo = userData.user.uid ? true : false\n      commit('onAuthStateChanged', userData.user)\n      commit('onUserStatusChanged', isExistUserInfo)\n    },\n    async getCurrentUser({ dispatch, commit, getters, rootGetters }, payload) {\n      const userData = await firebase.auth().currentUser\n      const isExistUserInfo = userData.user.uid ? true : false\n      commit('onAuthStateChanged', userData.user)\n      commit('onUserStatusChanged', isExistUserInfo)\n    },\n    async getUserById ({ dispatch, commit, getters, rootGetters }, payload) {\n      const userRef = USER_REF().doc(payload.userId)\n      const data = await userRef.get().then(function(doc) {\n        return doc.data()\n      })\n      return data\n    },\n    async getUsersName ({ dispatch, commit, getters, rootGetters }, payload) {\n      const usersName = []\n      await USER_REF().get().then(function(doc){\n        for(const user of doc.docs){\n          const userData = user.data()\n          usersName.push(userData.name)\n        }\n      })\n      return usersName\n    },\n    async updateUserName ({ dispatch, commit, getters, rootGetters }, payload) {\n      const user = getters.user\n      const userRef = USER_REF().doc(user.uid)\n\n      const names = await dispatch('getUsersName')\n      if (names.includes(payload.userName)){\n        // 存在する\n        return false\n      }else{\n        if(user) {\n          user.updateProfile({\n            displayName: payload.userName\n          })\n          userRef.update({\n            name: payload.userName\n          })\n        }\n        return true\n      }\n    },\n    async registerBan ({ dispatch, commit, getters, rootGetters }, payload) {\n      const userId = payload.userId\n      const userRef = USER_REF().doc(userId)\n      userRef.update({\n        isBan: true\n      })\n    },\n    async releaseBan ({ dispatch, commit, getters, rootGetters }, payload) {\n      const userId = payload.userId\n      const userRef = USER_REF().doc(userId)\n      userRef.update({\n        isBan: false\n      })\n    },\n    async RefreshUser ({ dispatch, commit, getters, rootGetters }, payload) {\n      dispatch('getUserAnonymously')\n    },\n    async updateIcon ({ dispatch, commit, getters, rootGetters }, payload) {\n      const userRef = USER_REF().doc(getters.user.uid)\n      await userRef.update({\n        icon: payload.icon\n      })\n      userRef.get().then(function(doc) {\n        commit('setUserInfo', doc.data())\n      })\n    }\n  }\n}"]}]}