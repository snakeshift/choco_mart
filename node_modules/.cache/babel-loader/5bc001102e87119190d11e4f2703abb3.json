{"remainingRequest":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/babel-loader/lib/index.js!/Users/yokoyamakenta/Desktop/choco_mart/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/yokoyamakenta/Desktop/choco_mart/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yokoyamakenta/Desktop/choco_mart/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yokoyamakenta/Desktop/choco_mart/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yokoyamakenta/Desktop/choco_mart/src/views/Home.vue","mtime":1602978521353},{"path":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/cache-loader/dist/cjs.js","mtime":1599521191920},{"path":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/babel-loader/lib/index.js","mtime":1599521191611},{"path":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/vuetify-loader/lib/loader.js","mtime":1599521195655},{"path":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/cache-loader/dist/cjs.js","mtime":1599521191920},{"path":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/vue-loader/lib/index.js","mtime":1599521195584}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <v-row justify=\"center\" class=\"choco-mart\">\n      <v-card class=\"border-choco back-choco\">\n        <v-toolbar dark color=\"#1E2E58\" height=\"30\" class=\"border-initial\">\n          <v-toolbar-title class=\"body-2 text-choco\">チョコットマート</v-toolbar-title>\n          <v-spacer></v-spacer>\n        </v-toolbar>\n        <div three-line subheader class=\"back-choco pb-0\">\n          <div class=\"pl-2 pt-4 pos-rel\">\n            <div>\n              <v-row>\n                <v-col class=\"py-0\">\n                  <div class=\"input-text-choco back-choco-dark\">\n                    <label for=\"user_name\" class=\"text-choco body-2\">名前</label>\n                    <input v-if=\"!user.displayName\" type=\"text\" name=\"user_name\" class=\"text-choco-dark body-2\" placeholder=\"名も無き冒険者\" maxlength=\"15\" v-model=\"userName\">\n                    <input v-else type=\"text\" name=\"user_name\" class=\"text-choco-dark body-2\" placeholder=\"名も無き冒険者\" maxlength=\"15\" :value=\"user.displayName\" readonly>\n                  </div>\n                  <v-btn color=\"#1E2E58\" fab dark class=\"ml-1 name-check\" v-if=\"!is_empty(userName) && !isSetUserName\" @click=\"showNameDialog()\">\n                    <v-icon>mdi-check-bold</v-icon>\n                  </v-btn>\n                </v-col>\n              </v-row>\n            </div>\n            <!-- <div class=\"morico\"></div> -->\n            <div class=\"morico\" @click=\"logout()\"></div>\n          </div>\n        </div>\n        <div class=\"tab-choco\">\n          <table class=\"item-tab-choco back-choco pa-2 pl-1\" cellspacing=\"5\">\n            <tr class=\"item-th-choco text-choco body-2\">\n              <th v-for=\"(content, index) in TYPE_TEXT\" :key=\"index\" @click=\"setTab(index)\" :class=\"{'isChecked': index == selected}\" class=\"pos-rel\">\n                {{content}}\n                <transition>\n                  <v-badge\n                    v-if=\"index == TYPE.MY_PAGE && !is_empty(noticeBadge)\"\n                    class=\"badge-choco\"\n                    :content=\"noticeBadge\"\n                    color=\"red\"\n                    overlap\n                  >\n                  </v-badge>\n                </transition>\n              </th>\n            </tr>\n          </table>\n        </div>\n        <div class=\"mx-2 content-choco\">\n          <transition name=\"slide-left\">\n            <buy v-if=\"isLoaded\" v-show=\"selected == TYPE.BUY && !isShow.comment\" @showReply = showReply></buy>\n          </transition>\n          <transition name=\"slide-left\">\n            <sell v-if=\"isLoaded\" v-show=\"selected == TYPE.SELL && !isShow.comment\" @showReply = showReply></sell>\n          </transition>\n          <transition name=\"slide-left\">\n            <list v-if=\"isLoaded\" v-show=\"selected == TYPE.LIST && !isShow.comment\" @showReply = showReply></list>\n          </transition>\n          <transition name=\"slide-left\">\n            <talk v-if=\"isLoaded\" v-show=\"selected == TYPE.TALK && !isShow.comment\" @showReply = showReply></talk>\n          </transition>\n          <transition name=\"slide-left\">\n            <mypage v-if=\"isLoaded\" v-show=\"selected == TYPE.MY_PAGE && !isShow.comment\" @showReply = showReply></mypage>\n          </transition>\n          <transition name=\"slide-left\">\n            <comment v-if=\"isLoaded\" v-show=\"isShow.comment\" ref=\"comment\" @closeReply = closeReply @showReply = showReply></comment>\n          </transition>\n        </div>\n      </v-card>\n    </v-row>\n    <v-row justify=\"center\">\n      <v-dialog\n        v-model=\"dialog.isShow\"\n        max-width=\"290\"\n      >\n        <div class=\"modal-choco\">\n          <div class=\"head text-choco pl-2 body-2\">\n            {{dialog.title}}\n          </div>\n          <div class=\"body text-choco-dark pa-2\">\n            <p v-html=\"dialog.content\"></p>\n          </div>\n          <div class=\"footer\">\n            <v-btn v-if=\"dialog.button.positive.isShow\" color=\"primary\" class=\"button-choco\" :class=\"{'pointer-none': dialog.button.positive.isClicked}\" dark @click=\"dialog.button.positive.func()\">\n              <span>OK</span>\n            </v-btn>\n            <v-btn v-if=\"dialog.button.negative.isShow\" color=\"primary\" class=\"button-choco\" dark @click=\"dialog.button.negative.func()\">\n              <span>キャンセル</span>\n            </v-btn>\n          </div>\n        </div>\n      </v-dialog>\n    </v-row>\n    <loading />\n    <errorModal />\n    <successModal />\n  </div>\n</template>\n\n<script>\nimport firebase from 'firebase'\nimport firebaseConfig from '@/plugins/firebase'\nimport { mapState, mapGetters, mapMutations, mapActions } from 'vuex'\nimport store from '@/store'\nimport { USER_REF, SELL_REF, BUY_REF, NOTICE_REF } from '@/config/firebase/ref'\nimport { CURRENT_TIME } from '@/config/firebase/util'\nimport { TYPE, TYPE_TEXT } from '@/config/library'\n\nimport buy from '@/components/buy.vue'\nimport sell from '@/components/sell.vue'\nimport list from '@/components/list.vue'\nimport talk from '@/components/talk.vue'\nimport mypage from '@/components/mypage.vue'\nimport comment from '@/components/comment.vue'\nimport loading from '@/components/loading.vue'\nimport errorModal from '@/components/errorModal.vue'\nimport successModal from '@/components/successModal.vue'\n\nexport default {\n  name: 'Home',\n  components: {\n    buy,\n    sell,\n    list,\n    talk,\n    mypage,\n    comment,\n    loading,\n    errorModal,\n    successModal\n  },\n  data () {\n    return {\n      isLoaded: false,\n      selected: TYPE.BUY,\n      userName: '',\n      isSetUserName: false,\n      isShow: {\n        comment: false\n      },\n      dialog: {\n        isShow: false,\n        title: '',\n        content: '',\n        button: {\n          positive: {\n            isShow: false,\n            isClicked: false,\n            func(){}\n          },\n          negative: {\n            isShow: false,\n            func(){}\n          }\n        },\n      },\n    }\n  },\n  methods: {\n    async setUserName () {\n      const isSetCorrectly = await this.updateUserName({userName: this.userName})\n      if(isSetCorrectly) {\n        this.isSetUserName = true\n        this.dialog.isShow = false\n      }else{\n        this.dialog.content = `\n        <p>その名前は既に使われています。</p>`\n        this.dialog.button.positive.func = () => {\n          this.dialog.isShow = false\n        }\n      }\n    },\n    logout() {\n      firebaseConfig.logout()\n    },\n    async showReply(itemId, kind) {\n      this.setIsLoading(true)\n      this.setStatusMsg('読み込み中..')\n      this.$refs.comment.setKind(kind)\n      this.$refs.comment.init(itemId,kind)\n      await this.$refs.comment.refresh(itemId,kind)\n      await this.$refs.comment.refreshNotice()\n\n      this.$refs.comment.tableScroll()\n      this.isShow.comment = !this.isShow.comment\n      this.setIsLoading(false)\n    },\n    closeReply(){\n      this.isShow.comment = !this.isShow.comment\n    },\n    showNameDialog() {\n      this.dialog.title = 'notice'\n      this.dialog.content = `\n        <p>お名前の設定は1度だけ可能です。<br>\n        【${this.userName}】でよろしいですか?\n        </p>\n      `\n      this.dialog.button.positive.isShow = true\n      this.dialog.button.positive.func = () => {\n        this.setUserName(this.userName)\n      }\n      this.dialog.button.negative.isShow = true\n      this.dialog.button.negative.func = () => {\n        this.dialog.isShow = false\n      }\n      this.dialog.isShow = true\n    },\n    setTab(index) {\n      this.selected = index\n      this.isShow.comment = false\n      this.$refs.comment.closeListener()\n      if (index == TYPE.MY_PAGE) {\n        this.resetBadge({type: 'notices'})\n      }\n    },\n    async checkPushPermission() {\n      const userRef = USER_REF().doc(this.user.uid)\n      const messaging = firebase.messaging()\n      Notification.requestPermission()\n        .then(permission => {\n          return messaging.getToken()\n        })\n        .then(token => {\n          userRef.update({\n            token\n          })\n          this.setIsShowSuccess(true)\n          this.setModalStatusMsg(`お気に入りタブに登録することで<br>プッシュ通知を受け取れます。`)\n        })\n        .catch(err => {\n          this.setIsShowError(true)\n          this.setModalStatusMsg(`書き込み通知を受け取りたい場合は<br>通知を許可してください。`)\n        })\n    },\n    // メッセージを受け取り時\n    async watchPushMessage() {\n      const messaging = firebase.messaging()\n      messaging.onMessage(function(payload) {\n        const title = payload.notification.title\n        const options = {\n          body: payload.notification.body,\n          icon: payload.notification.icon\n        };\n        const notification = new Notification(title, options)\n\n      })\n    },\n    // トークン更新時\n    async watchRefreshToken() {\n      const userRef = USER_REF().doc(this.user.uid)\n      const messaging = firebase.messaging()\n      messaging.onTokenRefresh(function() {\n        messaging.getToken().then(function(token) {\n          userRef.update({\n            token\n          })\n        })\n      })\n    },\n    ...mapMutations('loading', [\n      'setIsLoading',\n      'setStatusMsg'\n    ]),\n    ...mapMutations({\n      setIsShowError: 'modal/setIsShowError',\n      setIsShowSuccess: 'modal/setIsShowSuccess',\n      setModalStatusMsg: 'modal/setStatusMsg'\n    }),\n    ...mapMutations('auth', [\n      'setUserInfo'\n    ]),\n    ...mapMutations('firebase', [\n      'resetBadge'\n    ]),\n    ...mapActions('auth', [\n      'getUserAnonymously',\n      'updateUserName'\n    ])\n  },\n  async mounted() {\n    await this.getUserAnonymously()\n\n    const userRef = USER_REF().doc(this.user.uid)\n    await userRef.get().then(async function(doc) {\n      if(doc.exists) {\n\n        // fcmが許可されているブラウザの場合\n        if (firebase.messaging.isSupported()) {\n          const token = doc.data().token\n          if (!token) await this.checkPushPermission()\n          this.watchPushMessage()\n          this.watchRefreshToken()\n        }\n\n        userRef.update({\n          updated_at: CURRENT_TIME()\n        })\n        this.setUserInfo(doc.data())\n        this.isLoaded = true\n      }else{\n        // 認証情報が取れていなければ初期化ページに飛ばす\n        this.$router.push('/')\n      }\n    }.bind(this))\n  },\n  computed: {\n    TYPE: () => TYPE,\n    TYPE_TEXT: () => TYPE_TEXT,\n    ...mapGetters({\n      isLoading: 'loading/isLoading',\n      user: 'auth/user',\n      noticeBadge: 'firebase/noticeBadge'\n    }),\n  },\n  watch: {},\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.morico{\n  position: absolute;\n  background-size: contain;\n  background-image: url(\"../assets/imgs/mohu.png\");\n  width: 70px;\n  height: 70px;\n  bottom: -10px;\n  right: 10px;\n}\n.choco-mart{\n  height: 100%;\n  margin: 0;\n  &>div{\n    height: 90%;\n    width: 95vw;\n    max-width: 800px;\n    margin: auto !important;\n    overflow: hidden;\n  }\n}\n.name-check{\n  min-width: 28px !important;\n  width: 28px !important;\n  height: 28px !important;\n  box-shadow: unset !important;\n  span{\n    i{\n      font-size: 20px !important;\n    }\n  }\n}\n.tab-choco{\n  height: 54px;\n}\n.content-choco{\n  position: relative;\n  // height: 100%;\n  height: calc(100% - 30px - 46px - 54px - 19px);\n}\n.badge-choco {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n</style>"],"sourceRoot":"src/views"}]}