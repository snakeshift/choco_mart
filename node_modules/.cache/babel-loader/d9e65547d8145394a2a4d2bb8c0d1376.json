{"remainingRequest":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/babel-loader/lib/index.js!/Users/yokoyamakenta/Desktop/choco_mart/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/yokoyamakenta/Desktop/choco_mart/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yokoyamakenta/Desktop/choco_mart/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yokoyamakenta/Desktop/choco_mart/src/components/talk.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yokoyamakenta/Desktop/choco_mart/src/components/talk.vue","mtime":1601504225747},{"path":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/cache-loader/dist/cjs.js","mtime":1599521191920},{"path":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/babel-loader/lib/index.js","mtime":1599521191611},{"path":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/vuetify-loader/lib/loader.js","mtime":1599521195655},{"path":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/cache-loader/dist/cjs.js","mtime":1599521191920},{"path":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/vue-loader/lib/index.js","mtime":1599521195584}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["talk.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"page-parent\">\n    <div class=\"table-choco talk\" ref=\"talk_table\">\n      <div>\n        <table class=\"item-table-choco back-choco\" cellspacing=\"0\">\n          <thead>\n            <tr class=\"item-th-choco text-choco body-2\">\n              <th>タイトル名</th>\n              <th>投稿者</th>\n              <th>返</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(item,index) in sortedItems\" :key=\"index\" class=\"item-td-choco text-choco pointer\" @click=\"$emit('showReply', item.id, COMMENT_TYPE.TALK)\">\n              <td>\n                <div class=\"item-input-choco\">\n                  <v-chip\n                    dark\n                    :color=\"TALK_TYPE_COLOR[item.type]\" \n                    x-small\n                    class=\"chip\"\n                  >\n                    {{TALK_TYPE_TEXT_SHORT[item.type]}}\n                  </v-chip>\n                  <span type=\"text\" class=\"text-choco-dark pl-12 text-truncate\">\n                    {{item.title}}                \n                  </span>\n                </div>\n              </td>\n              <td>\n                <div class=\"item-input-choco\">\n                  <span class=\"text-choco-dark text-truncate\">{{item.name}}</span>\n                </div>\n              </td>\n              <td>\n                <div class=\"item-input-choco\">\n                  <span class=\"text-choco-dark link pointer text-truncate\">{{item.reply}}</span>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <v-row justify=\"center\" class=\"pa-0\">\n        <v-dialog\n          v-model=\"dialog.isShow\"\n          max-width=\"290\"\n        >\n          <div class=\"modal-choco\">\n            <div class=\"head text-choco pl-2 body-2\">\n              {{dialog.title}}\n            </div>\n            <div class=\"body text-choco-dark pa-2\">\n              <p v-html=\"dialog.content\"></p>\n            </div>\n            <div class=\"footer\">\n              <button v-if=\"dialog.button.positive.isShow\" @click=\"dialog.button.positive.func()\">OK</button>\n              <button v-if=\"dialog.button.negative.isShow\" @click=\"dialog.button.negative.func()\">キャンセル</button>\n            </div>\n          </div>\n        </v-dialog>\n      </v-row>\n      <v-row justify=\"center\" class=\"pa-0\">\n        <v-dialog\n          v-model=\"chat.isShow\"\n          max-width=\"500\"\n          width=\"90%\"\n        >\n          <div class=\"modal-choco\" style=\"height: 445px;\">\n            <div class=\"head text-choco pl-2 body-2\">スレッド作成</div>\n            <div class=\"body text-choco-dark pa-2 mt-3 modal-textarea-choco\">\n              <v-row>\n                <v-col cols=\"5\" class=\"pt-0 pb-0\">\n                  <v-select\n                    v-model=\"chat.selectedType\"\n                    :items=\"TALK_TYPE_SELECT\"\n                    item-text=\"TEXT\"\n                    item-value=\"VALUE\"\n                    label=\"種別\"\n                    outlined\n                    class=\"mb-4\"\n                    hide-details\n                  ></v-select>\n                </v-col>\n              </v-row>\n              <v-text-field\n                label=\"タイトル..\"\n                v-model=\"chat.title\"\n                outlined\n                class=\"mb-4 text-choco-dark body\"\n                hide-details\n              ></v-text-field>\n              <v-textarea\n                outlined\n                label=\"内容..\"\n                v-model=\"chat.content\"\n                no-resize\n                height=\"180px\"\n                class=\"text-choco-dark body\"\n                hide-details\n              ></v-textarea>\n            </div>\n            <div class=\"footer\">\n              <v-btn color=\"primary\" class=\"button-choco\" :loading=\"chat.loading\" dark @click=\"sendChat()\">\n                <span>作成</span>\n              </v-btn>\n              <v-btn color=\"primary\" class=\"button-choco\" dark @click=\"chat.isShow = false\">\n                <span>閉じる</span>\n              </v-btn>\n            </div>\n          </div>\n        </v-dialog>\n      </v-row>\n    </div>\n    <div class=\"panel-choco\">\n      <v-btn class=\"mx-2 write\" fab dark small color=\"#1E2E58\" @click=\"chat.isShow = true\">\n        <v-icon dark>mdi-pencil</v-icon>\n      </v-btn>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapGetters, mapMutations, mapActions } from 'vuex'\nimport firebase from 'firebase'\nimport { TALK_TYPE, TALK_TYPE_SELECT, TALK_TYPE_TEXT_SHORT, TALK_TYPE_COLOR, STATUS, STATUS_TEXT, TYPE_TEXT_SHORT, COMMENT_TYPE } from '@/config/library'\nimport { USER_REF, SELL_REF, BUY_REF, NOTICE_REF, LIST_REF, COMMENT_REF } from '@/config/firebase/ref'\nimport { CURRENT_TIME, INCREMENT, DELETE, ARRAY_UNION } from '@/config/firebase/util'\n\nexport default {\n  data () {\n    return {\n      dialog: {\n        isShow: false,\n        title: \"\",\n        content: \"\",\n        button: {\n          positive: {\n            isShow: false,\n            func(){}\n          },\n          negative: {\n            isShow: false,\n            func(){}\n          }\n        },\n      },\n      count: 0,\n      limit: 20,\n      chat: {\n        selectedType: TALK_TYPE.CHAT,\n        title: '',\n        content: '',\n        isShow: false,\n        loading: false\n      },\n    }\n  },\n  methods: {\n    checkScroll() {\n      const talkTable = this.$refs.talk_table\n      talkTable.addEventListener('scroll', async function () {\n        if (!this.isLoading) {\n          const clientHeight = talkTable.clientHeight\n          const scrollTop = talkTable.scrollTop\n          const scrollHeight = talkTable.scrollHeight\n          const near = 50\n          if ((clientHeight + scrollTop) >= scrollHeight - near) {\n            const keys = Object.keys(this.sortedItems)\n            const lastItem = this.sortedItems[keys[keys.length - 1]]\n            const lastUpdatedAt = lastItem.updated_at\n\n            if (keys.length >= this.counts.talks) return\n            this.setIsLoading(true)\n            this.setStatusMsg('更新中..')\n            await new Promise(r => setTimeout(r, 1000))\n            await this.getTalkList({limit: this.limit, lastUpdatedAt})\n            this.setIsLoading(false)\n          }\n        }\n      }.bind(this))\n    },\n    async sendChat(){\n      if (!this.chat.title || !this.chat.content) return\n      this.chat.loading = true\n      await this.registerTalkList({title: this.chat.title, content: this.chat.content, type: this.chat.selectedType})\n\n      this.chat.isShow = false\n      this.chat.loading = false\n      this.chat.title = ''\n      this.chat.content = ''\n      this.chat.type = TALK_TYPE.CHAT\n\n      this.scrollTo(this.$refs.talk_table, 'top', 100)\n    },\n    ...mapActions('firebase', ['registerTalkList', 'getTalkList', 'setTalkListListener', 'setTalkListCountListener']),\n    ...mapMutations('loading', [\n      'setIsLoading',\n      'setStatusMsg'\n    ])\n  },\n  computed: {\n    TALK_TYPE: () => TALK_TYPE,\n    TALK_TYPE_COLOR: () => TALK_TYPE_COLOR,\n    TALK_TYPE_SELECT: () => TALK_TYPE_SELECT,\n    TALK_TYPE_TEXT_SHORT: () => TALK_TYPE_TEXT_SHORT,\n    STATUS: () => STATUS,\n    STATUS_TEXT: () => STATUS_TEXT,\n    COMMENT_TYPE: () => COMMENT_TYPE,\n    ...mapGetters({\n      user: 'auth/user',\n      items: 'firebase/talkList',\n      counts: 'firebase/count',\n      isLoading: 'loading/isLoading',\n    }),\n    sortedItems() {\n      const sortedItems = {}\n      const array = []\n      const items = this.items\n      for (const key in items) { array.push(key)}\n      array.sort(function(a,b){\n        if(items[a].updated_at && items[b].updated_at) {\n          return (items[a].updated_at.seconds < items[b].updated_at.seconds) ? 1 : -1\n        }\n      }.bind(this))\n      for (const item of array) {\n        sortedItems[item] = items[item]\n      }\n      return sortedItems\n    }\n  },\n  mounted(){\n    this.getTalkList({limit: this.limit})\n    this.setTalkListListener()\n    this.setTalkListCountListener()\n    this.checkScroll()\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.talk{\n  &>div{\n    padding: 9px;\n    table{\n      border: 1px solid $base_color_2;\n      border-radius: 7px 7px 0 0;\n    }\n  }\n  .item-th-choco{\n    th{\n      &:first-of-type{\n        width: auto;\n      }\n      &:nth-of-type(2){\n        width: 25%;\n        text-align: left;\n      }\n      &:last-of-type{\n        width: 2rem;\n      }\n    }\n  }\n}\n</style>"],"sourceRoot":"src/components"}]}