{"remainingRequest":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/yokoyamakenta/Desktop/choco_mart/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/yokoyamakenta/Desktop/choco_mart/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yokoyamakenta/Desktop/choco_mart/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yokoyamakenta/Desktop/choco_mart/src/components/comment.vue?vue&type=template&id=a0559e02&","dependencies":[{"path":"/Users/yokoyamakenta/Desktop/choco_mart/src/components/comment.vue","mtime":1581426896436},{"path":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yokoyamakenta/Desktop/choco_mart/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}